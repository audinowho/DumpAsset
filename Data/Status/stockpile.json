{
"Version": "0.8.0.0",
"Object": {
"$type": "RogueEssence.Data.StatusData, RogueEssence",
"Name": {
"DefaultText": "Stockpile",
"LocalTexts": {
"fr": "Stockage",
"de": "Horter",
"es": "Reserva",
"it": "Accumulo",
"zh-hans": "蓄力"
}
},
"Desc": {
"DefaultText": "The Pokémon has stockpiled energy, to use in the moves Swallow or Spit Up. It also increases its Defense and Special Defense. This status wears off after many turns have passed.",
"LocalTexts": {
"fr": "Le Pokémon stocke de l'énergie pour les capacités Avale et Relâche. Améliore aussi la Défense et la Défense Spéciale. Ce statut disparaît après plusieurs tours.",
"de": "Das Pokémon hortet Energie, um Attacken wie Entfessler und Verzehrer nutzen zu können. Des Weiteren erhöht es seine Verteidigung und Spezial Verteidigung. Dieser Status lässt nach vielen Zügen nach.",
"es": "El Pokémon ha acumulado energia, para usarlo en los movimientos Tragar o Escupir. También aumenta su Defensa y Defensa Especial. Este estado desaparece tras pasar unos turnos.",
"it": "Il Pokémon accumula energia per utilizzarla successivamente in Introenergia o Sfoghenergia. Aumenta anche la Difesa e la Difesa Speciale. Questo stato svanisce dopo diversi turni.",
"zh-hans": "这只宝可梦储存了能量，用于招式吞下或喷出，且防御和特防也会提升。该状态在大量回合后解除。"
}
},
"Released": true,
"Comment": "",
"MenuName": true,
"CarryOver": false,
"Emoticon": "",
"DropEmoticon": "",
"FreeEmote": "",
"DrawEffect": -1,
"Targeted": false,
"StatusStates": [
{
"$type": "RogueEssence.Dungeon.StackState, RogueEssence",
"Stack": 0
},
{
"$type": "PMDC.Dungeon.TransferStatusState, PMDC"
},
{
"$type": "RogueEssence.Dungeon.CountDownState, RogueEssence",
"Counter": 25
}
],
"OnSkillChanges": [],
"TargetPassive": {
"OnEquips": [],
"OnPickups": [],
"BeforeStatusAdds": [],
"BeforeStatusAddings": [],
"OnStatusAdds": [],
"OnStatusRemoves": [],
"OnMapStatusAdds": [],
"OnMapStatusRemoves": [],
"OnMapStarts": [],
"OnTurnStarts": [],
"OnTurnEnds": [],
"OnMapTurnEnds": [],
"OnWalks": [],
"OnDeaths": [],
"OnRefresh": [],
"BeforeTryActions": [],
"BeforeActions": [],
"OnActions": [],
"BeforeHittings": [],
"BeforeBeingHits": [],
"AfterHittings": [],
"AfterBeingHits": [],
"OnHitTiles": [],
"AfterActions": [],
"UserElementEffects": [],
"TargetElementEffects": [],
"ModifyHPs": [],
"RestoreHPs": []
},
"ProximityEvent": {
"Radius": -1,
"TargetAlignments": 0,
"BeforeExplosions": [],
"OnEquips": [],
"OnPickups": [],
"BeforeStatusAdds": [],
"BeforeStatusAddings": [],
"OnStatusAdds": [],
"OnStatusRemoves": [],
"OnMapStatusAdds": [],
"OnMapStatusRemoves": [],
"OnMapStarts": [],
"OnTurnStarts": [],
"OnTurnEnds": [],
"OnMapTurnEnds": [],
"OnWalks": [],
"OnDeaths": [],
"OnRefresh": [],
"BeforeTryActions": [],
"BeforeActions": [],
"OnActions": [],
"BeforeHittings": [],
"BeforeBeingHits": [],
"AfterHittings": [],
"AfterBeingHits": [],
"OnHitTiles": [],
"AfterActions": [],
"UserElementEffects": [],
"TargetElementEffects": [],
"ModifyHPs": [],
"RestoreHPs": []
},
"OnEquips": [],
"OnPickups": [],
"BeforeStatusAdds": [
{
"Key": {
"str": [
0
]
},
"Value": {
"$type": "PMDC.Dungeon.StringStackCheck, PMDC",
"HiLimitMsg": {
"Key": "MSG_STOCKPILE_NO_MORE"
},
"LoLimitMsg": {
"Key": ""
},
"Minimum": 0,
"Maximum": 3
}
}
],
"BeforeStatusAddings": [],
"OnStatusAdds": [
{
"Key": {
"str": [
0
]
},
"Value": {
"$type": "PMDC.Dungeon.StatusLogStackEvent, PMDC",
"Message": {
"Key": "MSG_STOCKPILE"
},
"Delay": true
}
}
],
"OnStatusRemoves": [
{
"Key": {
"str": [
0
]
},
"Value": {
"$type": "PMDC.Dungeon.StatusBattleLogEvent, PMDC",
"Message": {
"Key": "MSG_STOCKPILE_END"
},
"Delay": false
}
}
],
"OnMapStatusAdds": [],
"OnMapStatusRemoves": [],
"OnMapStarts": [],
"OnTurnStarts": [],
"OnTurnEnds": [
{
"Key": {
"str": [
0
]
},
"Value": {
"$type": "PMDC.Dungeon.CountDownRemoveEvent, PMDC",
"ShowMessage": true
}
}
],
"OnMapTurnEnds": [],
"OnWalks": [],
"OnDeaths": [],
"OnRefresh": [],
"BeforeTryActions": [],
"BeforeActions": [],
"OnActions": [
{
"Key": {
"str": [
0
]
},
"Value": {
"$type": "PMDC.Dungeon.UserStatBoostEvent, PMDC",
"Stat": 2
}
},
{
"Key": {
"str": [
0
]
},
"Value": {
"$type": "PMDC.Dungeon.UserStatBoostEvent, PMDC",
"Stat": 4
}
}
],
"BeforeHittings": [],
"BeforeBeingHits": [
{
"Key": {
"str": [
-5
]
},
"Value": {
"$type": "PMDC.Dungeon.TargetStatBoostEvent, PMDC",
"Stat": 2
}
},
{
"Key": {
"str": [
-5
]
},
"Value": {
"$type": "PMDC.Dungeon.TargetStatBoostEvent, PMDC",
"Stat": 4
}
}
],
"AfterHittings": [],
"AfterBeingHits": [],
"OnHitTiles": [],
"AfterActions": [],
"UserElementEffects": [],
"TargetElementEffects": [],
"ModifyHPs": [],
"RestoreHPs": []
}
}