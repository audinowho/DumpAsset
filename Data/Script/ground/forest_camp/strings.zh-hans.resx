<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Camps_Line_001" xml:space="preserve">
    <value>当开拓者们首次攀登这座山时，[pause=0]他们在沿途设立了休息营地。[br]穿过他们所留下的道路，{0}，就能去往{1}了。</value>
    <comment></comment>  </data>
  <data name="Carry_Line_001" xml:space="preserve">
    <value>呸！[pause=0]为什么卡比兽要在我们的仓库门前打盹啊？</value>
    <comment></comment>  </data>
  <data name="Carry_Line_002" xml:space="preserve">
    <value>我想抱怨这情况的严重性，[pause=0]但我还没从上一次缓过来……</value>
    <comment></comment>  </data>
  <data name="Deliver_Line_001" xml:space="preserve">
    <value>给悬崖营地的补给品送晚了啊。[pause=0]吞食兽会吞了我们俩的！</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_001" xml:space="preserve">
    <value>我们是战术撤退队！[pause=0]\n我们的特长是让对手追赶不上！</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_002" xml:space="preserve">
    <value>在不可思议迷宫里，一旦有风吹草动，也许你就会立刻准备应战……[scroll]但这有时不是什么好策略。</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_003" xml:space="preserve">
    <value>有的野生宝可梦非常凶狠。[pause=0]为了生存下去，判断何时应该逃跑也很关键。</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_001" xml:space="preserve">
    <value>嗨！[pause=0]这里又有新面孔啦，感觉真棒！[br]你是要接着向上走吗？[pause=0]那你拿上这个比较好。</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_002" xml:space="preserve">
    <value>探索新迷宫时，你总该带上一个{0}。[scroll]在首次通过之前，[pause=30]你不知道迷宫有多少层，[pause=30]也不知道深处会有多危险。</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_003" xml:space="preserve">
    <value>有起始等级的迷宫更是如此了……</value>
    <comment></comment>  </data>
  <data name="Parent_Child_Line_001" xml:space="preserve">
    <value>妈妈，我想出去玩！</value>
    <comment></comment>  </data>
  <data name="Parent_Child_Line_002" xml:space="preserve">
    <value>好吧，宝贝，[pause=30]但你不能离开这片空地。[br]你还只是棵幼苗，而且外面有很大很恐怖的不可思议迷宫。</value>
    <comment></comment>  </data>
  <data name="Sleeper_Line_001" xml:space="preserve">
    <value>卡比兽睡得很死，令人厌恶地堵住了入口……</value>
    <comment></comment>  </data>
</root>