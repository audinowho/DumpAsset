{
"Version": "0.8.0.0",
"Object": {
"$type": "RogueEssence.Data.SkillData, RogueEssence",
"Name": {
"DefaultText": "Mat Block",
"LocalTexts": {
"fr": "Tatamigaeshi",
"de": "Tatami-Schild",
"es": "Escudo Tatami",
"it": "Ribaltappeto",
"ko": "마룻바닥세워막기",
"ja": "たたみがえし",
"ja-jp": "たたみがえし",
"zh-hans": "掀榻榻米",
"zh-hant": "掀榻榻米"
}
},
"Desc": {
"DefaultText": "Using a pulled-up mat as a shield, the user protects itself and its allies from damaging moves. This does not stop status moves.",
"LocalTexts": {
"fr": "Retourne un tatami pour bloquer, comme avec un bouclier, les capacités visant le lanceur ou ses alliés. N’a pas d’effet sur les attaques de statut.",
"de": "Der Anwender richtet eine Tatami-Matte auf, um sich und sein Team vor Schaden zu schützen. Kein Schutz vor Status-Attacken.",
"es": "El usuario usa un tatami para escudarse de los movimientos enemigos. Protege también a los aliados. No funciona contra ataques de estado.",
"it": "Chi la usa protegge se stesso e i propri alleati dai danni di mosse nemiche, adoperando un tappetino come scudo. Non è efficace contro mosse di stato.",
"ko": "뒤집어 세운 마룻바닥을 방패로 하여 자신과 같은 편으로 향하는 기술 데미지를 막는다. 변화 기술은 막을 수 없다.",
"ja": "かえした　タタミを　たてにして　じぶんや  かたへの　わざの　ダメージを　ふせぐ。 へんかわざは　ふせぐことが　できない。",
"ja-jp": "かえした　タタミを　盾にして　自分や 味方への　技の　ダメージを　防ぐ。 変化技は　防ぐことが　できない。",
"zh-hans": "将掀起来的榻榻米当作盾牌，防住自己和同伴免受招式伤害。变化招式无法防住。",
"zh-hant": "將掀起來的榻榻米當作盾牌， 防禦住攻擊我方的攻擊招式。 但無法防禦住變化招式的攻擊。"
}
},
"Released": false,
"Comment": "",
"IndexNum": 561,
"BaseCharges": 10,
"Strikes": 1,
"HitboxAction": {
"$type": "RogueEssence.Dungeon.AttackAction, RogueEssence",
"HitTiles": false,
"BurstTiles": 0,
"Emitter": {
"$type": "RogueEssence.Content.EmptyFiniteEmitter, RogueEssence",
"LocHeight": 0
},
"WideAngle": 0,
"CharAnimData": {
"$type": "RogueEssence.Dungeon.CharAnimFrameType, RogueEssence",
"ActionType": 5
},
"TargetAlignments": 4,
"TileEmitter": {
"$type": "RogueEssence.Content.EmptyFiniteEmitter, RogueEssence",
"LocHeight": 0
},
"PreActions": [],
"ActionFX": {
"Delay": 0,
"Sound": "",
"Emitter": {
"$type": "RogueEssence.Content.EmptyFiniteEmitter, RogueEssence",
"LocHeight": 0
},
"ScreenMovement": {
"MinShake": 0,
"MaxShake": 0,
"MaxShakeTime": 0
}
},
"LagBehindTime": 0
},
"Explosion": {
"TargetAlignments": 4,
"HitTiles": false,
"Range": 0,
"Speed": 0,
"TileEmitter": {
"$type": "RogueEssence.Content.EmptyFiniteEmitter, RogueEssence",
"LocHeight": 0
},
"Emitter": {
"$type": "RogueEssence.Content.EmptyCircleSquareEmitter, RogueEssence",
"LocHeight": 0
},
"IntroFX": [],
"ExplodeFX": {
"Delay": 0,
"Sound": "",
"Emitter": {
"$type": "RogueEssence.Content.EmptyFiniteEmitter, RogueEssence",
"LocHeight": 0
},
"ScreenMovement": {
"MinShake": 0,
"MaxShake": 0,
"MaxShakeTime": 0
}
}
},
"Data": {
"Element": "fighting",
"Category": 3,
"HitRate": -1,
"SkillStates": [],
"BeforeTryActions": [],
"BeforeActions": [],
"OnActions": [],
"BeforeExplosions": [],
"BeforeHits": [],
"OnHits": [],
"OnHitTiles": [],
"AfterActions": [],
"ElementEffects": [],
"IntroFX": [],
"HitFX": {
"Delay": 0,
"Sound": "",
"Emitter": {
"$type": "RogueEssence.Content.EmptyFiniteEmitter, RogueEssence",
"LocHeight": 0
},
"ScreenMovement": {
"MinShake": 0,
"MaxShake": 0,
"MaxShakeTime": 0
}
},
"HitCharAction": {
"$type": "RogueEssence.Dungeon.CharAnimProcess, RogueEssence",
"Process": 0,
"AnimOverride": 0
}
}
}
}