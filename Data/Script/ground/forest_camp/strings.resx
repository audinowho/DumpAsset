<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Camps_Line_001" xml:space="preserve">
    <value>When trailblazers first came to climb the mountain,[pause=0] they set up rest camps along the way.[br]Go straight through the {0} they left behind, and you'll find yourself in {1}.</value>
    <comment></comment>  </data>
  <data name="Carry_Line_001" xml:space="preserve">
    <value>Gah![pause=0] Why'd Snorlax choose to take a nap in front of our storehouse of all places?</value>
    <comment></comment>  </data>
  <data name="Carry_Line_002" xml:space="preserve">
    <value>I'd give him a wake-up call and a piece of my mind,[pause=0] but I'm still recovering from last time...</value>
    <comment></comment>  </data>
  <data name="Carry_Line_Route" xml:space="preserve">
    <value>[tmp](carry) I'm on my routine route in forest camp!</value>
    <comment></comment>  </data>
  <data name="Catch_Line_001" xml:space="preserve">
    <value>[tmp]We're playing catch in the woods!</value>
    <comment></comment>  </data>
  <data name="Catch_Line_002" xml:space="preserve">
    <value>[tmp]And sunkern might humorously comment from the side, wanting join but has no arms!</value>
    <comment></comment>  </data>
  <data name="Cure_Line_001" xml:space="preserve">
    <value>[tmp]You have the herba mystica? Thank goodness![br]I'll make the medicine right away!</value>
    <comment></comment>  </data>
  <data name="Cure_Line_002" xml:space="preserve">
    <value>[tmp]There. Sunkern's recovering and should be back to normal.[br]We can't thank you enough.  Take this!</value>
    <comment></comment>  </data>
  <data name="Cure_Line_003" xml:space="preserve">
    <value>[tmp]No worries now, Sunkern will soon recover from sickness.</value>
    <comment></comment>  </data>
  <data name="Cure_Line_004" xml:space="preserve">
    <value>[tmp]Sunkern, this is the rescue team that saved you from that sickness!</value>
    <comment></comment>  </data>
  <data name="Cure_Line_005" xml:space="preserve">
    <value>[tmp]Thanks so much for helping me get better!</value>
    <comment></comment>  </data>
  <data name="Deliver_Line_001" xml:space="preserve">
    <value>The supplies for Cliff Camp are running late.[pause=0] Swalot will have our heads for this!</value>
    <comment></comment>  </data>
  <data name="Deliver_Line_Route" xml:space="preserve">
    <value>[tmp](deliver) I'm on my routine route in forest camp!</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_001" xml:space="preserve">
    <value>We're Team Tactical Retreat![pause=0]\nOur main skill is outrunning our opponents!</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_002" xml:space="preserve">
    <value>In Mystery Dungeons, it might be tempting to fight everything you see...[scroll] but that's not always a good idea.</value>
    <comment></comment>  </data>
  <data name="Doduo_Line_003" xml:space="preserve">
    <value>Some wild Pok√©mon can be brutal.[pause=0]\nLearning when to run is important for surviving.</value>
    <comment></comment>  </data>
  <data name="Elder_Complete_Line_001" xml:space="preserve">
    <value>[tmp]That scarf...[br]It's a keepsake of my partner who disappeared after crossing the bandits.[br]Here, you can have this. I can finally let it go.</value>
    <comment></comment>  </data>
  <data name="Elder_Complete_Line_002" xml:space="preserve">
    <value>[tmp]Thanks for putting the outlaws out of business.</value>
    <comment></comment>  </data>
  <data name="Elder_Line_001" xml:space="preserve">
    <value>[tmp]A moment of your time. Would you be able to look for something in Ambush Forest?[br]A scarf...</value>
    <comment></comment>  </data>
  <data name="Elder_Line_002" xml:space="preserve">
    <value>[tmp]If you see a scarf like this in Ambush Forest... please bring it back to me.</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_001" xml:space="preserve">
    <value>Hiya![pause=0] Great to see new people around![br]Are you going up ahead?[pause=0] You'd better pack yourself one of these.</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_002" xml:space="preserve">
    <value>You should always bring [a/an] {0} when exploring a new dungeon.[scroll]Until you clear it for the first time,[pause=30] you don't know how deep it goes[pause=30] or how dangerous it'll get.</value>
    <comment></comment>  </data>
  <data name="Pachirisu_Line_003" xml:space="preserve">
    <value>Especially if the dungeon resets your level...</value>
    <comment></comment>  </data>
  <data name="Parent_Child_Line_001" xml:space="preserve">
    <value>Mama, I wanna go out and play!</value>
    <comment></comment>  </data>
  <data name="Parent_Child_Line_002" xml:space="preserve">
    <value>Alright dearie,[pause=30] but you musn't leave the clearing.[br]You're still just a seedling, and there's big scary Mystery Dungeons out there.</value>
    <comment></comment>  </data>
  <data name="Sickness_Line_001" xml:space="preserve">
    <value>[tmp]Sunkern's fallen ill to a mysterious disease. I don't know what to do.</value>
    <comment></comment>  </data>
  <data name="Sickness_Line_002" xml:space="preserve">
    <value>[tmp]This isn't your average everyday sickness.[br]This is a rare illness from Sickly Hollow![br]The only cure is a rare plant that endures in the depths of the dungeon.</value>
    <comment></comment>  </data>
  <data name="Sickness_Line_003" xml:space="preserve">
    <value>[tmp]Will you help us?[br]You will need to extract an herb from around {0}F.[br]It's very hard to spot if you don't know what you're looking for,[br]which explains why it didn't spawn until I handed you the mission just now.</value>
    <comment></comment>  </data>
  <data name="Sickness_Line_004" xml:space="preserve">
    <value>[tmp]Be warned. Sickly Hollow is a miserable dungeon from which all plagues originate.[br]Be prepared before you enter.</value>
    <comment></comment>  </data>
  <data name="Sleeper_Line_001" xml:space="preserve">
    <value>Snorlax is asleep,[pause=30] inconveniently blocking the entrance...</value>
    <comment></comment>  </data>
  <data name="Sleeper_Line_002" xml:space="preserve">
    <value>[tmp]GROOOOO!</value>
    <comment></comment>  </data>
  <data name="Sleeper_Line_Ask" xml:space="preserve">
    <value>[tmp]Wake it up?</value>
    <comment></comment>  </data>
  <data name="Sleeper_Line_Fail_001" xml:space="preserve">
    <value>[tmp]Yeah, he doesn't like having his sleep disturbed.</value>
    <comment></comment>  </data>
  <data name="Sleeper_Line_Success_001" xml:space="preserve">
    <value>[tmp]NOOOOO *Runs away*</value>
    <comment></comment>  </data>
  <data name="Sleeper_Line_Success_002" xml:space="preserve">
    <value>[tmp]Thanks for moving Snorlax. Have a reward.</value>
    <comment></comment>  </data>
  <data name="Sleeper_Line_Success_003" xml:space="preserve">
    <value>[tmp]Lets get this stock to cliff camp.</value>
    <comment></comment>  </data>
  <data name="Solo_Line_001" xml:space="preserve">
    <value>[tmp]I don't need teammates, I can get through myself!</value>
    <comment></comment>  </data>
  <data name="Storehouse_Line_Route" xml:space="preserve">
    <value>[tmp]I'm on my routine route in forest camp!</value>
    <comment></comment>  </data>
  <data name="Unlucky_Line_001" xml:space="preserve">
    <value>[tmp]Which way do I go?[br]Through my dialogue I establish I'm really bad with directions.[br]Chimecho told me to go straight down Faded Trail but I kept taking alternate exits and never unlocked Cliff Camp.</value>
    <comment></comment>  </data>
</root>